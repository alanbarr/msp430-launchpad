#include <msp430.h>
//
///*
// * main.c
// */
//#define LED BIT0
//int main(void) {
//     WDTCTL = WDTPW | WDTHOLD;	// Stop watchdog timer
//	P1DIR |= LED;
//	P1OUT &=~LED;
//	P1SEL |= LED;
//	TACCR0 = 10000 - 1;
//	TACCR1 = 200 -1 ;
//	TACCTL1 |= OUTMOD_7;
//	TACTL = TASSEL_2 + MC_1;
//
//	while(1);
//	return 0;
//}
////#pragma vector = PORT1_VECTOR               //TO TELL THE ADDRESS OF THE PERIPHERAL FROM WHICH INTERRUPT HAS COME
////__interrupt void port1(void)                //JUMP TO THE ISR
////if()
//#pragma vector=TIMER0_A0_VECTOR
//__interrupt void ccr0_isr(void) {
//  if(P1OUT_bit.P0) {#include <msp430.h>
#define LED BIT6
int main(void) {
    WDTCTL = WDTPW | WDTHOLD;   // Stop watchdog timer
    P1DIR |= LED;               //SETTING THE LED AS OUTPUT
    P1OUT &= ~LED;              //SWITCHING OFF THE LED
    P1SEL |= LED;               //SELECTING TIMER0.1(PRIMARY FUNCTION)
    TACCR0 = 10000 - 1;         //SETTING FREQUENCY
    TACCR1 = 500  - 1 ;         //SETTING DUTY CYCLE
    TACTL = TASSEL_2 + MC_1;    //SETTING CLOCK SMCLK, TIMER IN UP MODE
    TACCTL1 = OUTMOD_7;         //SETTING OUTPUT IN MODE 7 i.e. SET/RESET
    while(1);                   //INFINITE LOOP
    return 0;
}

//    P1OUT &= ~BIT0;          // switch off LED1
//    TACCR0 += 11800;         // OFF time (you may use a variable here)
//  } else {
//    P1OUT |= BIT0;           // switch ON LED1
//    TACCR0 += 200;           // ON time (you may use a variable here)
//  }
//}


